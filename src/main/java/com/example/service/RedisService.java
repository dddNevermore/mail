package com.example.service;import java.util.concurrent.TimeUnit;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.redis.core.StringRedisTemplate;import org.springframework.data.redis.core.ValueOperations;import org.springframework.stereotype.Component;import org.springframework.stereotype.Repository;import org.springframework.stereotype.Service;@Repository@Component@Service("redisService")public class RedisService{    @Autowired    private StringRedisTemplate stringRedisTemplate;    public void set(String key, String value)    {        this.stringRedisTemplate.opsForValue().set(key, value);    }    public String get(String key)    {        return (String)this.stringRedisTemplate.opsForValue().get(key);    }    public Long incr(String key)    {        return this.stringRedisTemplate.opsForValue().increment(key, 1L);    }    public Long decr(String key)    {        return this.stringRedisTemplate.opsForValue().increment(key, -1L);    }    public Boolean expire(String key, int days)    {        return this.stringRedisTemplate.expire(key, days, TimeUnit.DAYS);    }    public long ttl(String key)    {        return this.stringRedisTemplate.getExpire(key).longValue();    }}